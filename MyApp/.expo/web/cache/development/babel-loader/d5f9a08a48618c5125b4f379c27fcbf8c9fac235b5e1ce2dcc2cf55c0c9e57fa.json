{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { TextInput, Button } from \"react-native-paper\";\nimport { createUserWithEmailAndPassword } from \"./LoginScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar styles = StyleSheet.create({\n  container1: {\n    width: \"100%\",\n    height: \"100%\",\n    backgroundColor: \"#ffffff\"\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: \"bold\",\n    color: \"#000000\",\n    textAlign: \"center\"\n  },\n  paragraph: {\n    fontSize: 18,\n    color: \"#000000\",\n    textAlign: \"center\"\n  },\n  text: {\n    fontSize: 16,\n    color: \"#000000\",\n    textAlign: \"center\"\n  },\n  input: {\n    height: 40,\n    borderColor: \"#000000\",\n    borderWidth: 1,\n    padding: 10\n  },\n  button: {\n    backgroundColor: \"#0000ff\",\n    height: 40,\n    width: \"100%\",\n    borderRadius: 5,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  buttonText: {\n    color: \"#ffffff\",\n    fontSize: 18,\n    fontWeight: \"bold\"\n  }\n});\nexport default function RegisterScreen() {\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var _useState5 = useState(\"\"),\n    _useState6 = _slicedToArray(_useState5, 2),\n    name = _useState6[0],\n    setName = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    loading = _useState8[0],\n    setLoading = _useState8[1];\n  if (loading) {\n    return _jsx(ActivityIndicator, {\n      size: \"large\",\n      color: \"#00ff00\"\n    });\n  }\n  var handleRegister = function () {\n    var _ref = _asyncToGenerator(function* () {\n      setLoading(true);\n      if (!email || !password || !name) {\n        alert(\"Por favor ingrese todos los datos\");\n        setLoading(false);\n        return;\n      }\n      try {\n        var result = yield createUserWithEmailAndPassword(email, password);\n        setLoading(false);\n        yield updateUserName(name);\n        navigation.navigate(\"HomeScreen\");\n      } catch (err) {\n        alert(\"Correo o Contrase침a Incorrecta\");\n        console.log(err);\n        setLoading(false);\n      }\n    });\n    return function handleRegister() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  return _jsx(KeyboardAvoidingView, {\n    behavior: \"position\",\n    children: _jsxs(View, {\n      style: styles.container1,\n      children: [_jsx(Text, {\n        style: styles.title,\n        children: \"Registrarse\"\n      }), _jsxs(Text, {\n        style: styles.paragraph,\n        children: [\"Crea una cuenta de\", \" \", _jsx(Text, {\n          style: styles.text,\n          children: \"Emprend-IA\"\n        })]\n      }), _jsx(TextInput, {\n        style: styles.input,\n        placeholder: \"Correo electr\\xF3nico\",\n        value: email,\n        onChangeText: setEmail\n      }), _jsx(TextInput, {\n        style: styles.input,\n        placeholder: \"Contrase\\xF1a\",\n        value: password,\n        onChangeText: setPassword,\n        secureTextEntry: true\n      }), _jsx(TextInput, {\n        style: styles.input,\n        placeholder: \"Nombre\",\n        value: name,\n        onChangeText: setName\n      }), _jsx(Button, {\n        style: styles.button,\n        onPress: handleRegister,\n        children: _jsx(Text, {\n          style: styles.buttonText,\n          children: \"Registrarse\"\n        })\n      })]\n    })\n  });\n}","map":{"version":3,"names":["React","useState","View","Text","Image","TouchableOpacity","KeyboardAvoidingView","StyleSheet","ActivityIndicator","TextInput","Button","createUserWithEmailAndPassword","jsx","_jsx","jsxs","_jsxs","styles","create","container1","width","height","backgroundColor","title","fontSize","fontWeight","color","textAlign","paragraph","text","input","borderColor","borderWidth","padding","button","borderRadius","alignItems","justifyContent","buttonText","RegisterScreen","_useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","_useState5","_useState6","name","setName","_useState7","_useState8","loading","setLoading","size","handleRegister","_ref","_asyncToGenerator","alert","result","updateUserName","navigation","navigate","err","console","log","apply","arguments","behavior","children","style","placeholder","value","onChangeText","secureTextEntry","onPress"],"sources":["C:/Users/jpabl/OneDrive/Desktop/PruebaBard/MyApp/components/RegisterScreen.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  Image,\r\n  TouchableOpacity,\r\n  KeyboardAvoidingView,\r\n  StyleSheet,\r\n  ActivityIndicator,\r\n} from \"react-native\";\r\nimport { TextInput, Button } from \"react-native-paper\";\r\n\r\nimport { createUserWithEmailAndPassword } from \"./LoginScreen\";\r\n\r\nconst styles = StyleSheet.create({\r\n  container1: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    backgroundColor: \"#ffffff\",\r\n  },\r\n  title: {\r\n    fontSize: 24,\r\n    fontWeight: \"bold\",\r\n    color: \"#000000\",\r\n    textAlign: \"center\",\r\n  },\r\n  paragraph: {\r\n    fontSize: 18,\r\n    color: \"#000000\",\r\n    textAlign: \"center\",\r\n  },\r\n  text: {\r\n    fontSize: 16,\r\n    color: \"#000000\",\r\n    textAlign: \"center\",\r\n  },\r\n  input: {\r\n    height: 40,\r\n    borderColor: \"#000000\",\r\n    borderWidth: 1,\r\n    padding: 10,\r\n  },\r\n  button: {\r\n    backgroundColor: \"#0000ff\",\r\n    height: 40,\r\n    width: \"100%\",\r\n    borderRadius: 5,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  buttonText: {\r\n    color: \"#ffffff\",\r\n    fontSize: 18,\r\n    fontWeight: \"bold\",\r\n  },\r\n});\r\n\r\nexport default function RegisterScreen() {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  if (loading) {\r\n    return (\r\n      <ActivityIndicator size=\"large\" color=\"#00ff00\" />\r\n    );\r\n  }\r\n\r\n  const handleRegister = async () => {\r\n    setLoading(true);\r\n    if (!email || !password || !name) {\r\n      alert(\"Por favor ingrese todos los datos\");\r\n      setLoading(false);\r\n      return;\r\n    }\r\n    try {\r\n      const result = await createUserWithEmailAndPassword(email, password);\r\n      setLoading(false);\r\n\r\n      // Actualiza el nombre del usuario\r\n      await updateUserName(name);\r\n\r\n      // Navega a la siguiente pantalla\r\n      navigation.navigate(\"HomeScreen\");\r\n\r\n    } catch (err) {\r\n      alert(\"Correo o Contrase침a Incorrecta\");\r\n      console.log(err);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <KeyboardAvoidingView behavior=\"position\">\r\n      <View style={styles.container1}>\r\n        <Text style={styles.title}>Registrarse</Text>\r\n        <Text style={styles.paragraph}>\r\n          Crea una cuenta de{\" \"}\r\n          <Text style={styles.text}>Emprend-IA</Text>\r\n        </Text>\r\n        <TextInput\r\n          style={styles.input}\r\n          placeholder=\"Correo electr칩nico\"\r\n          value={email}\r\n          onChangeText={setEmail}\r\n        />\r\n        <TextInput\r\n          style={styles.input}\r\n          placeholder=\"Contrase침a\"\r\n          value={password}\r\n          onChangeText={setPassword}\r\n          secureTextEntry={true}\r\n        />\r\n        <TextInput\r\n          style={styles.input}\r\n          placeholder=\"Nombre\"\r\n          value={name}\r\n          onChangeText={setName}\r\n        />\r\n        <Button\r\n          style={styles.button}\r\n          onPress={handleRegister}\r\n        >\r\n          <Text style={styles.buttonText}>Registrarse</Text>\r\n        </Button>\r\n      </View>\r\n    </KeyboardAvoidingView>\r\n  );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}